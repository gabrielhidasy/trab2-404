.global itoa
.global litoa
.type itoa, %function
.type litoa, %function
	@itoa
	@recebe um inteiro positivo em r0 e um buffer em r1 e retorna void
itoa:	
	@salvar registradores na pilha
	stmfd sp!, {R4-R12, lr}
	mov r9,#0
	mov r10, #10
	add fp, sp, #40
	@inicializa r2 com 1
	mov r2, #1
detmax:
	sub r3,r0,r2
	cmp r3, #0
	@se ficar menor que 0 achou o valor maximo de r2, 10^r9
	sublt r9,r9,#1
	blt cont
	mul r2,r10,r2
	add r9,r9,#1
	b detmax
cont:
	mov r4,r0 @salva r0 (o inteiro) em r4
	mov r5,r1 @salva r1 (o ap p/ buffer) em r5 e r6
	mov r6, r1
	@achar o primeiro multiplo, 10^r9
	mov r0, #1
	mov r1,r9
	bl pow10
	@em r0 temos o primeiro numero, acumulador em r3
	mov r3,#0
loop:
	sub r4, r4, r0
	cmp r4, #0
	addge r3,r3,#1
	bge loop
	@se chegou aqui foi porque r3+1 tem o maior digito, gravar
	sub r3,r3,#1
	mov r0, #1
	sub r1, r1, #1
	cmp r1,#0
	blt enditoa
	bl  pow10
	str r3, [r5], #1
	mov r3,#0
	b loop
enditoa:
	mov r0, r6
	ldmfd sp!, {R4-R12, pc}


@recebe um numero em r0 e outro em r1, retorna r0^10*r1 em r0
pow10:
	mov r3,#10
	cmp r1,	#0	
	moveq r0,#1
	moveq pc, lr
pow10loop:
	cmp r1, #0
	moveq pc, lr
	mul r0,r3,r0
	sub r1, r1, #1
	b pow10loop
	
litoa:	
	